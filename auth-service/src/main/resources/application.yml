server:
  port: 8082

spring:
  application:
    name: auth-service
  config:
    import: classpath:shared-config.yml
  datasource:
    url: jdbc:postgresql://localhost:5432/auth_service
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    open-in-view: false
  kafka:
    bootstrap-servers: localhost:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: true
        spring.json.type.mapping: mailRequested:com.vertyll.projecta.common.event.mail.MailRequestedEvent,userRegistered:com.vertyll.projecta.common.event.user.UserRegisteredEvent,userUpdated:com.vertyll.projecta.common.event.user.UserProfileUpdatedEvent
        spring.json.value.default.type: "com.vertyll.projecta.common.event.DomainEvent"
    consumer:
      group-id: auth-service-group
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: "com.vertyll.projecta.*"
        spring.json.value.default.type: "com.vertyll.projecta.common.event.DomainEvent"
        spring.json.use.type.headers: true
        spring.json.type.mapping: mailRequested:com.vertyll.projecta.common.event.mail.MailRequestedEvent,userRegistered:com.vertyll.projecta.common.event.user.UserRegisteredEvent,userUpdated:com.vertyll.projecta.common.event.user.UserProfileUpdatedEvent
  cloud:
    discovery:
      enabled: false
    service-registry:
      auto-registration:
        enabled: false

# OpenAPI configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true
    url: /api-docs
    config-url: /api-docs/swagger-config

# Actuator endpoints configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
