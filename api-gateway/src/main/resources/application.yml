server:
  port: 8080

spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive
  cloud:
    config:
      enabled: false
    discovery:
      enabled: false
    service-registry:
      auto-registration:
        enabled: false
    eureka:
      client:
        enabled: false
        register-with-eureka: false
        fetch-registry: false
    gateway:
      routes:
        - id: auth-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - RewritePath=/api/v1/auth/(?<segment>.*), /api/auth/$\{segment}
        - id: user-service
          uri: http://localhost:8083
          predicates:
            - Path=/api/v1/users/**
          filters:
            - RewritePath=/api/v1/users/(?<segment>.*), /api/users/$\{segment}
        - id: role-service
          uri: http://localhost:8084
          predicates:
            - Path=/api/v1/roles/**
          filters:
            - RewritePath=/api/v1/roles/(?<segment>.*), /api/roles/$\{segment}
        - id: mail-service
          uri: http://localhost:8085
          predicates:
            - Path=/api/v1/mail/**
          filters:
            - RewritePath=/api/v1/mail/(?<segment>.*), /api/mail/$\{segment}
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:4200"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
  jpa:
    open-in-view: false
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
  kafka:
    bootstrap-servers: localhost:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: api-gateway-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.vertyll.projecta.*"
        spring.json.value.default.type: "java.util.Map"

# JWT configuration
security:
  jwt:
    secret-key: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
    access-token-expiration: 900000 # 15 minutes
    refresh-token-expiration: 604800000 # 7 days
    refresh-token-cookie-name: refresh_token

# OpenAPI configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true
    url: /api-docs
    config-url: /api-docs/swagger-config

# Actuator endpoints configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true